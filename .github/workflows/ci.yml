name: CI/CD Pipeline

on:
  push:
    branches:
      - deploy  # Trigger on push to the 'main' branch

jobs:
  build:
    runs-on: ubuntu-latest  # Use GitHub's Ubuntu runner

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Docker Buildx (optional for multi-platform builds)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to GHCR
      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          username: ${{ github.actor }}  # Use the GitHub actor as username
          password: ${{ secrets.DOCKER_PASSWORD }}  # Use your GitHub PAT for authentication
          registry: ghcr.io

      # Step 3.5: Install docker-compose
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.19.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version  # Verify the installation

      # Step 4: Build Docker images
      - name: Build Docker image
        run: |
          docker-compose -f docker-compose.yml build  # Builds images as defined in docker-compose.yml

      # Step 5: Tag and push Docker image to GHCR
      - name: Tag and push Docker image to GHCR
        run: |
          IMAGE_TAG=ghcr.io/anhntse183225/my-spring-boot-app:latest
          docker push $IMAGE_TAG  # Push the image to GHCR

        # Step 6: SSH into VPS and deploy
      - name: SSH into VPS and deploy
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          script: |
            cd /home/theanh/cicd/
            # Pull the latest Docker image from GHCR
            docker-compose pull
            docker-compose up -d  # Start services in detached mode
